#!/bin/bash
set -o pipefail
set -Eeu

script_dir="$(dirname "$0")"
cd "${script_dir}"
source_dir="$(pwd)"
build_dir="${source_dir}/../build_dir"

function make_build_dir_tree() {
    find . -type d -print0 | xargs -0 -I{} mkdir -p "$build_dir/{}"
}

function sections() {
    find "sections" -maxdepth 1 -mindepth 1 -type d |
        sed  -r -s 's#^sections/([^/]*)$#\1#' |
        sort |
        tr "\n" " "
}

function articles() {
    section="$1"
    section="./sections/${section}"
    find "${section}" -iname '*.md' |
        sed -r -e 's%(.*).md$%\1%' |
        sort |
        tr '\n' ' '
}

function section_dependencies(){
    for section in $(sections)
    do
        echo "${build_dir}/sections.auto.html: ${build_dir}/sections/${section}.section.auto.html"
        #echo                                  "${build_dir}/sections/${section}.section.auto.html: $(articles $section)"
        for article in $(articles $section)
        do
            echo "${build_dir}/sections/${section}.section.auto.html: ${build_dir}/$article.article.auto.html"
            echo "${build_dir}/$article.article.auto.html: $article.md"
        done
    done
}

function toc(){
    echo '<ul class="toc">' 
    for section in $(sections)
    do
        clean_section="$(sed -e 's/_/ /g' <<< "$section")"
        echo "  <li> <a href='#section_${section}'>${clean_section}</a> </li>"   
    done
    echo '</ul>'
}

make_build_dir_tree
toc > "${build_dir}/toc.auto.html"
section_dependencies > "${build_dir}/sections.auto.mk"

echo start make
cd "$build_dir"
(
    export srcdir="${source_dir}"
    make all --silent
)
