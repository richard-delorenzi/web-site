#!/bin/bash

script_dir="$(dirname "$0")"
cd "${script_dir}"
source_dir="$(pwd)"
build_dir="../build_dir"

function make_build_dir_tree() {
    #echo creating "$build_dir" from "${source_dir}"
    find . -type d -print0 | xargs -0 -I{} mkdir -p "$build_dir/{}"
}

function sections() {
    find sections -maxdepth 1 -mindepth 1 -type d |
        sed  -r -s 's#^sections/([^/]*)$#\1#' |
        sort |
        tr "\n" " "
}

function articles() {
    section="$1"
    find "sections/$section" -iname '*.md' |
        sed -r -e 's/(.*).md$/\1.article.auto.html/' |
        sort |
        tr '\n' ' '
}

function section_dependencies(){
    for section in $(sections)
    do
        echo sections.auto.html: sections/${section}.section.auto.html
        echo                     sections/${section}.section.auto.html: $(articles $section)
        echo                     sections/${section}.section.auto.html: ./sections/${section}.dir
    done
}

function toc(){
    echo '<ul class="toc">' 
    for section in $(sections)
    do
        clean_section="$(sed -e 's/_/ /g' <<< "$section")"
        echo "  <li> <a href='#section_${section}'>${clean_section}</a> </li>"   
    done
    echo '</ul>'
}

make_build_dir_tree
toc > "${build_dir}/toc.auto.html"
section_dependencies > "${build_dir}/sections.auto.mk"

cd "${build_dir}"
ln -f -s -t. ../source
ln -f -s -T ../the_site out
ln -f -s -t. source/Makefile
export VPATH=source:.
make all --silent --jobs=3 #jobs not needed, but is here so we know if concurency stops working
